CONSTRUCTORS

f : A -> A
h : A * A * A -> A

a : A
b : A


FUNCTIONS

foo : A -> A

RULES

// EX - ok
//foo(h(x, y, a())) -> a()


// EX - not ok (probably need to apply subsume)
// foo(h(x, a(), a())) -> a()
// foo(h(x, b(), a())) -> a()
// foo(h(x, f(y), a())) -> a()
// foo(h(x, h(y1,y2,y3), a())) -> a()


// EX - ok
// foo(h(a(), a(), a())) -> a()
// foo(h(a(), b(), a())) -> a()
// foo(h(a(), f(y), a())) -> a()
// foo(h(a(), h(y1,y2,y3), a())) -> a()


// EX - not ok
foo(h(a(), y, b())) -> a()
foo(h(x, b(), a())) -> a()
foo(h(a(), b(), f(y))) -> a()
foo(h(a(), b(), h(y1,y2,y3))) -> a()


// EX - not ok
// foo(h(a(), a(), b())) -> a()
// foo(h(a(), b(), b())) -> a()
// foo(h(a(), f(y), b())) -> a()
// foo(h(a(), h(y1,y2,y3), b())) -> a()
// foo(h(x, b(), a())) -> a()
// foo(h(a(), b(), f(y))) -> a()
// foo(h(a(), b(), h(y1,y2,y3))) -> a()


// EX - ok
// foo(h(f(a()), a(), a())) -> a()
// foo(h(f(a()), b(), a())) -> a()
// foo(h(f(a()), f(y), a())) -> a()
// foo(h(f(a()), h(y1,y2,y3), a())) -> a()

